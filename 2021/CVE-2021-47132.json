{
	"id": "CVE-2021-47132",
	"tags": [
		{
			"label": "Product",
			"message": "Linux"
		},
		{
			"label": "Version",
			"message": "64b9cea7a0af< b9c78b1a9596 "
		},
		{
			"label": "Vulnerability",
			"message": "n/a"
		}
	],
	"description": " In the Linux kernel, the following vulnerability has been resolved:mptcp: fix sk_forward_memory corruption on retransmissionMPTCP sk_forward_memory handling is a bit special, as such fieldis protected by the msk socket spin_lock, instead of the plainsocket lock.Currently we have a code path updating such field without handlingthe relevant lock:__mptcp_retrans() -> __mptcp_clean_una_wakeup()Several helpers in __mptcp_clean_una_wakeup() will updatesk_forward_alloc, possibly causing such field corruption, as reportedby Matthieu.Address the issue providing and using a new variant of blamed functionwhich explicitly acquires the msk spin lock.",
	"poc": {
		"githubs": [
			"https://github.com/NaInSec/CVE-LIST"
		]
	}
}
