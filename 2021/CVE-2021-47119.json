{
	"id": "CVE-2021-47119",
	"tags": [
		{
			"label": "Product",
			"message": "Linux"
		},
		{
			"label": "Version",
			"message": "ac27a0ec112a< 01d349a481f0 "
		},
		{
			"label": "Vulnerability",
			"message": "n/a"
		}
	],
	"description": " In the Linux kernel, the following vulnerability has been resolved:ext4: fix memory leak in ext4_fill_superBuffer head references must be released before calling kill_bdev();otherwise the buffer head (and its page referenced by b_data) will notbe freed by kill_bdev, and subsequently that bh will be leaked.If blocksizes differ, sb_set_blocksize() will kill current buffers andpage cache by using kill_bdev(). And then super block will be rereadagain but using correct blocksize this time. sb_set_blocksize() didn'tfully free superblock page and buffer head, and being busy, they werenot freed and instead leaked.This can easily be reproduced by calling an infinite loop of:  systemctl start <ext4_on_lvm>.mount, and  systemctl stop <ext4_on_lvm>.mount... since systemd creates a cgroup for each slice which it mounts, andthe bh leak get amplified by a dying memory cgroup that also nevergets freed, and memory consumption is much more easily noticed.",
	"poc": {
		"githubs": [
			"https://github.com/NaInSec/CVE-LIST"
		]
	}
}
