{
	"id": "CVE-2020-9402",
	"tags": [
		{
			"label": "Product",
			"message": "n/a"
		},
		{
			"label": "Version",
			"message": "n/a"
		},
		{
			"label": "Vulnerability",
			"message": "n/a"
		}
	],
	"description": " Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",
	"poc": {
		"githubs": [
			"https://github.com/ARPSyndicate/cvemon",
			"https://github.com/ARPSyndicate/kenzer-templates",
			"https://github.com/CLincat/vulcat",
			"https://github.com/CnHack3r/Penetration_PoC",
			"https://github.com/EchoGin404/-",
			"https://github.com/EchoGin404/gongkaishouji",
			"https://github.com/Live-Hack-CVE/CVE-2020-9402",
			"https://github.com/Mr-xn/Penetration_Testing_POC",
			"https://github.com/SexyBeast233/SecBooks",
			"https://github.com/Threekiii/Awesome-POC",
			"https://github.com/Threekiii/Vulhub-Reproduce",
			"https://github.com/Tyro-Shan/gongkaishouji",
			"https://github.com/YIXINSHUWU/Penetration_Testing_POC",
			"https://github.com/ZTK-009/Penetration_PoC",
			"https://github.com/bakery312/Vulhub-Reproduce",
			"https://github.com/hasee2018/Penetration_Testing_POC",
			"https://github.com/hktalent/bug-bounty",
			"https://github.com/huike007/penetration_poc",
			"https://github.com/huike007/poc",
			"https://github.com/lions2012/Penetration_Testing_POC",
			"https://github.com/password520/Penetration_PoC",
			"https://github.com/reph0r/poc-exp",
			"https://github.com/reph0r/poc-exp-tools",
			"https://github.com/winterwolf32/CVE-S---Penetration_Testing_POC-",
			"https://github.com/xuetusummer/Penetration_Testing_POC",
			"https://github.com/yedada-wei/-",
			"https://github.com/yedada-wei/gongkaishouji"
		]
	}
}
