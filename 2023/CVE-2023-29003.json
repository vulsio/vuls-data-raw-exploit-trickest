{
	"id": "CVE-2023-29003",
	"tags": [
		{
			"label": "Product",
			"message": "kit"
		},
		{
			"label": "Version",
			"message": "= < 1.15.1 "
		},
		{
			"label": "Vulnerability",
			"message": "CWE-184: Incomplete List of Disallowed Inputs"
		},
		{
			"label": "Vulnerability",
			"message": "CWE-352: Cross-Site Request Forgery (CSRF)"
		}
	],
	"description": " SvelteKit is a web development framework. The SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods. SvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. While the implementation does a sufficient job in mitigating common CSRF attacks, prior to version 1.15.1, the protection can be bypassed by simply specifying a different `Content-Type` header value. If abused, this issue will allow malicious requests to be submitted from third-party domains, which can allow execution of operations within the context of the victim's session, and in extreme scenarios can lead to unauthorized access to usersâ€™ accounts. SvelteKit 1.15.1 updates the `is_form_content_type` function call in the CSRF protection logic to include `text/plain`. As additional hardening of the CSRF protection mechanism against potential method overrides, SvelteKit 1.15.1 is now performing validation on `PUT`, `PATCH` and `DELETE` methods as well. This latter hardening is only needed to protect users who have put in some sort of `?_method= override` feature themselves in their `handle` hook, so that the request that resolve sees could be `PUT`/`PATCH`/`DELETE` when the browser issues a `POST` request.",
	"poc": {
		"githubs": [
			"https://github.com/Extiri/extiri-web"
		]
	}
}
