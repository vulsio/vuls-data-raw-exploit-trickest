{
	"id": "CVE-2024-39469",
	"tags": [
		{
			"label": "Product",
			"message": "Linux"
		},
		{
			"label": "Version",
			"message": "2ba466d74ed7< 2ac8a2fe22bd "
		},
		{
			"label": "Vulnerability",
			"message": "n/a"
		}
	],
	"description": " In the Linux kernel, the following vulnerability has been resolved:nilfs2: fix nilfs_empty_dir() misjudgment and long loop on I/O errorsThe error handling in nilfs_empty_dir() when a directory folio/page readfails is incorrect, as in the old ext2 implementation, and if thefolio/page cannot be read or nilfs_check_folio() fails, it will falselydetermine the directory as empty and corrupt the file system.In addition, since nilfs_empty_dir() does not immediately return on afailed folio/page read, but continues to loop, this can cause a long loopwith I/O if i_size of the directory's inode is also corrupted, causing thelog writer thread to wait and hang, as reported by syzbot.Fix these issues by making nilfs_empty_dir() immediately return a falsevalue (0) if it fails to get a directory folio/page.",
	"poc": {
		"githubs": [
			"https://github.com/fkie-cad/nvd-json-data-feeds"
		]
	}
}
