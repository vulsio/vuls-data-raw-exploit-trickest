{
	"id": "CVE-2024-23331",
	"tags": [
		{
			"label": "Product",
			"message": "vite"
		},
		{
			"label": "Version",
			"message": "= >=2.7.0, < 2.9.17 "
		},
		{
			"label": "Vulnerability",
			"message": "CWE-178: Improper Handling of Case Sensitivity"
		},
		{
			"label": "Vulnerability",
			"message": "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"
		},
		{
			"label": "Vulnerability",
			"message": "CWE-284: Improper Access Control"
		}
	],
	"description": " Vite is a frontend tooling framework for javascript. The Vite dev server option `server.fs.deny` can be bypassed on case-insensitive file systems using case-augmented versions of filenames. Notably this affects servers hosted on Windows. This bypass is similar to CVE-2023-34092 -- with surface area reduced to hosts having case-insensitive filesystems. Since `picomatch` defaults to case-sensitive glob matching, but the file server doesn't discriminate; a blacklist bypass is possible. By requesting raw filesystem paths using augmented casing, the matcher derived from `config.server.fs.deny` fails to block access to sensitive files. This issue has been addressed in vite@5.0.12, vite@4.5.2, vite@3.2.8, and vite@2.9.17. Users are advised to upgrade. Users unable to upgrade should restrict access to dev servers.",
	"poc": {
		"references": [
			"https://github.com/vitejs/vite/security/advisories/GHSA-c24v-8rfc-w8vw"
		],
		"githubs": [
			"https://github.com/vignesh7701/CodeEditor-Beta"
		]
	}
}
