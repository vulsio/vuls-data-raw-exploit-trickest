{
	"id": "CVE-2022-34265",
	"tags": [
		{
			"label": "Product",
			"message": "n/a"
		},
		{
			"label": "Version",
			"message": "n/a"
		},
		{
			"label": "Vulnerability",
			"message": "n/a"
		}
	],
	"description": " An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.",
	"poc": {
		"githubs": [
			"https://github.com/ARPSyndicate/cvemon",
			"https://github.com/Mr-xn/Penetration_Testing_POC",
			"https://github.com/OSCKOREA-WORKSHOP/NEXUS-Firewall",
			"https://github.com/SYRTI/POC_to_review",
			"https://github.com/SurfRid3r/Django_vulnerability_analysis",
			"https://github.com/TakutoYoshikai/TakutoYoshikai",
			"https://github.com/Threekiii/Vulhub-Reproduce",
			"https://github.com/WhooAmii/POC_to_review",
			"https://github.com/ZhaoQi99/CVE-2022-34265",
			"https://github.com/ZhaoQi99/ZhaoQi99",
			"https://github.com/aeyesec/CVE-2022-34265",
			"https://github.com/bakery312/Vulhub-Reproduce",
			"https://github.com/coco0x0a/CTF_Django_CVE-2022-34265",
			"https://github.com/kDv44/djangoApi-V4.0",
			"https://github.com/manas3c/CVE-POC",
			"https://github.com/nomi-sec/PoC-in-GitHub",
			"https://github.com/qwqoro/GPN-Hackathon",
			"https://github.com/simonepetruzzi/WebSecurityProject",
			"https://github.com/t0m4too/t0m4to",
			"https://github.com/traumatising/CVE-2022-34265",
			"https://github.com/trhacknon/Pocingit",
			"https://github.com/xuetusummer/Penetration_Testing_POC"
		]
	}
}
