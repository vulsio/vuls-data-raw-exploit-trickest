{
  "id": "CVE-2019-1559",
  "tags": [
    {
      "label": "Product",
      "message": "OpenSSL"
    },
    {
      "label": "Version",
      "message": "n/a"
    },
    {
      "label": "Vulnerability",
      "message": "Padding Oracle"
    }
  ],
  "description": " If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
  "poc": {
    "references": [
      "https://www.oracle.com/security-alerts/cpujan2020.html",
      "https://www.oracle.com/security-alerts/cpujan2021.html",
      "https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html"
    ],
    "githubs": [
      "https://github.com/ARPSyndicate/cvemon",
      "https://github.com/chnzzh/OpenSSL-CVE-lib",
      "https://github.com/daTourist/Centos-6-openssl-1.0.1e-58.pd1trfir",
      "https://github.com/mrodden/vyger",
      "https://github.com/tls-attacker/TLS-Padding-Oracles"
    ]
  }
}
